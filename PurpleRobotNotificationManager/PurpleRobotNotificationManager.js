var currentExecutionContext=(function(){var a=this;var b=new Object();var c=false;if(this["PurpleRobot"]!=null){return 0}else{if(typeof module!=="undefined"&&module.exports){return 1}else{return 2}}})();switch(currentExecutionContext){case 0:PurpleRobot.log("*** PurpleRobotNotificationManager execution context: Purple Robot ***");PurpleRobot.loadLibrary("underscore.js");PurpleRobot.loadLibrary("date.js");break;case 1:console.warn("*** PurpleRobotNotificationManager execution context: Node.js ***");_=require("underscore");require("./date.js");break;case 2:console.warn("*** PurpleRobotNotificationManager execution context: Browser (reference JS libs from <script> tags) ***");break}Date.prototype.toICal=function(){var e="Date.prototype.toICal";var h=this.getFullYear(),g=this.getMonth()+1,a=this.getDate(),d=this.getHours(),f=this.getMinutes(),c=this.getSeconds();var b=""+h.toString()+((g<10)?"0"+g:g.toString())+((a<10)?"0"+a:a.toString())+"T"+((d<10)?"0"+d:d.toString())+((f<10)?"0"+f:f.toString())+((c<10)?"0"+c:c.toString());return b};var PRNM=(function(a){a.test=function(){return"hello world from exports"};var b=function(e){var c="prnm:ctor";b.prototype.data=e;self=this;b.prototype.setFunctionsAndLibraryRefsForEnv(e.env);self.getAppCfg();b.prototype.debug("current date using date.js: "+Date.today(),c);b.prototype.log("exiting...",c);return b.prototype};b.prototype={triggerIdPrefixes:{self:"unidentified-trigger",medPrompt:"MedPrompt: ",ema:"EMA: "},_:null,TimePeriod:null,self:null,data:null,debug:null,log:null,warn:null,error:null,playDefaultTone:null,persistEncryptedString:null,fetchEncryptedString:null,persistString:null,fetchString:null,scheduleScript:null,showNativeDialog:null,fetchWidget:null,updateWidget:null,updateTrigger:null,fetchTriggerIds:null,fetchTrigger:null,deleteTrigger:null,launchUrl:null,launchApplication:null,loadLibrary:null,getUserCfg:null,getAppCfg:null,actions:null,envConsts:null,userCfg:null,appCfg:null,execCtx:null,setFunctionsAndLibraryRefsForEnv:function(d){var c="setFunctionsAndLibraryRefsForEnv";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.envConsts=d;switch(self.execCtx){case 0:self.debug=function(f,e){if(self.appCfg.logLevel>=4){PurpleRobot.log("[DBG]"+(!(e==null||e==undefined||e=="null")?"["+e+"] ":" ")+f)}};self.log=function(f,e){if(self.appCfg.logLevel>=3){PurpleRobot.log("[INF]"+(!self.isNullOrUndefined(e)?"["+e+"] ":" ")+f)}};self.warn=function(f,e){if(self.appCfg.logLevel>=2){PurpleRobot.log("[WRN]"+(!self.isNullOrUndefined(e)?"["+e+"] ":" ")+f)}};self.error=function(f,e){if(self.appCfg.logLevel>=1){PurpleRobot.log("[ERR]"+(!self.isNullOrUndefined(e)?"["+e+"] ":" ")+f)}};self.playDefaultTone=function(){PurpleRobot.playDefaultTone()};self.persistEncryptedString=function(f,e,g){return PurpleRobot.persistEncryptedString(f,e,g)};self.fetchEncryptedString=function(f,e){return PurpleRobot.fetchEncryptedString(f,e)};self.persistString=function(f,e,g){return PurpleRobot.persistString(f,e,g)};self.fetchString=function(f,e){return PurpleRobot.fetchString(f,e)};self.scheduleScript=function(g,e,f){return PurpleRobot.scheduleScript(g,e,f)};self.showNativeDialog=function(j,i,g,f,e,h){return PurpleRobot.showNativeDialog(j,i,g,f,e,h)};self.displayToast=function(f,e){PurpleRobot.emitToast(f,e)};self.updatePurpleRobotConfiguration=function(f){var e="updatePurpleRobotConfiguration";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.debug("entered",e);if(!self.isNullOrUndefined(f)){self.log("Updating PR config using jsonPrConfig = "+JSON.stringify(f),e);self.debug("zip = "+_.zip(_.keys(f),_.values(f)),e);PurpleRobot.updateConfig(f)}else{self.warn("Purple Robot configuration not updated; jsonPrConfig was null or undefined.",e)}self.debug("exiting",e)},self.fetchWidget=function(e){return PurpleRobot.fetchWidget(e)};self.updateWidget=function(e){return PurpleRobot.updateWidget(e)};self.updateTrigger=function(f,e){return PurpleRobot.updateTrigger(f,e)};self.fetchTriggerIds=function(){return PurpleRobot.fetchTriggerIds()};self.fetchTrigger=function(e){return PurpleRobot.fetchTrigger(e)};self.deleteTrigger=function(e){return PurpleRobot.deleteTrigger(e)};self.launchUrl=function(e){return PurpleRobot.launchUrl(e)};self.launchApplication=function(e){return PurpleRobot.launchApplication(e)};self.loadLibrary=function(g,f){var e="loadLibrary";self.debug("nameOrPath = "+g+"; keyOfLibInstanceToReturn = "+f,e);PurpleRobot.loadLibrary(g);if(f!=null){self.debug("this[keyOfLibInstanceToReturn] = "+this[f],e);return this[f]}};self.vibrate=function(e){PurpleRobot.vibrate(e)};self.getUserCfg=function(){var e="getUserCfg";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.debug("entered",e);if(self.userCfg==null){self.debug("fetching userCfg on first call...",e);self.userCfg=JSON.parse(self.fetchEncryptedString(self.envConsts.userCfg.namespace,self.envConsts.userCfg.key));self.debug("userCfg = "+JSON.stringify(self.userCfg),e)}self.debug("exiting",e);return self.userCfg};self.getAppCfg=function(){var e="getAppCfg";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var f=self.appCfg!=null?""+self.appCfg.toString():null;if(f==null||f.search(/^\{/)!=-1||f.search(/\}$/)!=-1){self.appCfg=JSON.parse(self.fetchEncryptedString(self.envConsts.appCfg.namespace,self.envConsts.appCfg.key));self.debug("appCfg = "+JSON.stringify(self.appCfg),e);PurpleRobot.log("appCfg = "+JSON.stringify(self.appCfg));PurpleRobot.log("appCfg.logLevel = "+self.appCfg.logLevel)}self.debug("exiting",e);return self.appCfg};break;case 1:self.debug=function(f,e){if(self.appCfg.logLevel>=4){console.log("[DBG]"+(!(e==null||e==undefined||e=="null")?"["+e+"] ":" ")+f)}};self.log=function(f,e){if(self.appCfg.logLevel>=3){console.log("[INF]"+(!self.isNullOrUndefined(e)?"["+e+"] ":" ")+f)}};self.warn=function(f,e){if(self.appCfg.logLevel>=2){console.warn("[WRN]"+(!self.isNullOrUndefined(e)?"["+e+"] ":" ")+f)}};self.error=function(f,e){if(self.appCfg.logLevel>=1){console.error("[ERR]"+(!self.isNullOrUndefined(e)?"["+e+"] ":" ")+f)}};self.playDefaultTone=function(){var e="playDefaultTone";self.log("NOEXEC: playDefaultTone",e)};self.persistEncryptedString=function(i,g,j){var h="persistEncryptedString";self.log("persistEncryptedString: namespace = '"+i+"'; key = '"+g+"'; value = '"+j+"'",h);var e=require("fs");var f=self.envConsts.appCfg.tmpPersistencePath+"/"+i+"."+g+".txt";if(!e.existsSync(self.envConsts.appCfg.tmpPersistencePath)){e.mkdirSync(self.envConsts.appCfg.tmpPersistencePath)}return e.writeFileSync(f,j)};self.fetchEncryptedString=function(i,g){var h="fetchEncryptedString";var e=require("fs");var f=self.envConsts.appCfg.tmpPersistencePath+"/"+i+"."+g+".txt";return e.readFileSync(f)};self.persistString=function(g,e,h){var f="persistString";self.log("NOEXEC: persistString: namespace = '"+g+"'; key = '"+e+"'; value = '"+h+"'",f)};self.fetchString=function(g,e){var f="fetchString";self.log("NOEXEC: fetchString: namespace = '"+g+"'; key = '"+e+"'",f)};self.scheduleScript=function(h,e,g){var f="scheduleScript";self.log("NOEXEC: scheduleScript: "+self.getQuotedAndDelimitedStr([h,e,g],","),f)};self.showNativeDialog=function(k,j,h,g,f,i){var e="showNativeDialog";self.log("NOEXEC: showNativeDialog: "+self.getQuotedAndDelimitedStr([k,j,h,g,f,i],","),e)};self.displayToast=function(g,e){var f="displayToast";self.log("NOEXEC: displayToast: longOrShort = "+e+"; msg = "+g,f)};self.updatePurpleRobotConfiguration=function(f){var e="updatePurpleRobotConfiguration";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.debug("entered",e);if(!self.isNullOrUndefined(f)){self.log("Would update PR config using the following config structure:\r\n"+JSON.stringify(f),e)}else{self.warn("Purple Robot configuration not updated; jsonPrConfig was null or undefined.",e)}self.debug("exiting",e)},self.fetchWidget=function(f){var e="fetchWidget";self.log("NOEXEC: would fetchWidget: "+f,e)};self.updateWidget=function(f){var e="updateWidget";self.log("NOEXEC: updateWidget: "+JSON.stringify(f),e)};self.updateTrigger=function(k,i){var h="updateTrigger";self.log("updateTrigger: "+self.getQuotedAndDelimitedStr([k,JSON.stringify(i)],","),h);var e=require("fs");var g=e.existsSync(self.envConsts.appCfg.triggerPath)?e.readFileSync(self.envConsts.appCfg.triggerPath):null;var f=!self.isNullOrUndefined(g)&&g.length>0?JSON.parse(g):null;if(f==null){e.writeFileSync(self.envConsts.appCfg.triggerPath,JSON.stringify([i]))}else{var j=_.find(f,function(l){return l.identifier==k});if(self.isNullOrUndefined(j)){f.push(i)}else{f=_.reject(f,function(l){return l.identifier==k});f.push(i)}e.writeFileSync(self.envConsts.appCfg.triggerPath,JSON.stringify(f))}return f};self.fetchTriggerIds=function(){var i="fetchTriggerIds";var e=require("fs");var g=e.existsSync(self.envConsts.appCfg.triggerPath)?e.readFileSync(self.envConsts.appCfg.triggerPath):null;var f=!self.isNullOrUndefined(g)&&g.length>0?JSON.parse(g):null;var h=null;if(f!=null){h=_.pluck(f,"identifier")}self.debug("triggerIds = "+h,i);return h};self.fetchTrigger=function(i){var h="fetchTrigger";var e=require("fs");var f=e.existsSync(self.envConsts.appCfg.triggerPath)?JSON.parse(e.readFileSync(self.envConsts.appCfg.triggerPath)):null;var g=null;if(f!=null){var g=_.find(f,function(j){return j.identifier==i});self.debug("JSON.stringify(trigger) = "+JSON.stringify(g),h)}return g};self.deleteTrigger=function(f){var e="deleteTrigger";self.log("NOEXEC: deleteTrigger: "+f,e)};self.launchUrl=function(e){var f="launchUrl";self.log("NOEXEC: launchUrl: "+e,f)};self.launchApplication=function(f){var e="launchApplication";self.log("NOEXEC: launchApplication: "+url,e)};self.loadLibrary=function(g,e){var f=require(g);return f};self.vibrate=function(e){var f="vibrate";self.log("NOEXEC: vibrate: "+e,f)};self.getUserCfg=function(){var f="getUserCfg";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.log("entered",f);if(self.userCfg==null){self.debug("fetching userCfg on first call...",f);var e=require("fs");self.userCfg=JSON.parse(e.readFileSync(self.envConsts.userCfg.cfgFilePath))}self.log("exiting",f);return self.userCfg};self.getAppCfg=function(){var f="getAppCfg";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var g=self.appCfg!=null?""+self.appCfg.toString():null;if(g==null||g.search(/^\{/)!=-1||g.search(/\}$/)!=-1){var e=require("fs");self.appCfg=JSON.parse(e.readFileSync(self.envConsts.appCfg.cfgFilePath))}self.log("exiting",f);return self.appCfg};break;case 2:_=d.libRefs.underscore;Date.prototype=d.libRefs.datejs;self.debug=function(f,e){if(self.appCfg.logLevel>=4){console.log("[DBG]"+(!(e==null||e==undefined||e=="null")?"["+e+"] ":" ")+f)}};self.log=function(f,e){if(self.appCfg.logLevel>=3){console.log("[INF]"+(!self.isNullOrUndefined(e)?"["+e+"] ":" ")+f)}};self.warn=function(f,e){if(self.appCfg.logLevel>=2){console.warn("[WRN]"+(!self.isNullOrUndefined(e)?"["+e+"] ":" ")+f)}};self.error=function(f,e){if(self.appCfg.logLevel>=1){console.error("[ERR]"+(!self.isNullOrUndefined(e)?"["+e+"] ":" ")+f)}};self.playDefaultTone=function(){var e="playDefaultTone";self.log("NOEXEC: playDefaultTone",e)};self.persistEncryptedString=function(g,e,h){var f="persistEncryptedString";self.log("NOEXEC: persistEncryptedString: namespace = '"+g+"'; key = '"+e+"'; value = '"+h+"'",f)};self.fetchEncryptedString=function(g,e){var f="fetchEncryptedString";self.log("NOEXEC: fetchEncryptedString: namespace = '"+g+"'; key = '"+e+"'",f)};self.persistString=function(g,e,h){var f="persistString";self.log("NOEXEC: persistString: namespace = '"+g+"'; key = '"+e+"'; value = '"+h+"'",f)};self.fetchString=function(g,e){var f="fetchString";self.log("NOEXEC: fetchString: namespace = '"+g+"'; key = '"+e+"'",f)};self.scheduleScript=function(h,e,g){var f="scheduleScript";self.log("NOEXEC: scheduleScript: "+self.getQuotedAndDelimitedStr([h,e,g],","),f)};self.showNativeDialog=function(k,j,h,g,f,i){var e="showNativeDialog";self.log("NOEXEC: showNativeDialog: "+self.getQuotedAndDelimitedStr([k,j,h,g,f,i],","),e)};self.displayToast=function(g,e){var f="displayToast";self.log("NOEXEC: displayToast: longOrShort = "+e+"; msg = "+g,f)};self.updatePurpleRobotConfiguration=function(f){var e="updatePurpleRobotConfiguration";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.debug("entered",e);if(!self.isNullOrUndefined(f)){self.log("Would update PR config using the following config structure:\r\n"+JSON.stringify(f),e)}else{self.warn("Purple Robot configuration not updated; jsonPrConfig was null or undefined.",e)}self.debug("exiting",e)},self.fetchWidget=function(f){var e="fetchWidget";self.log("NOEXEC: would fetchWidget: "+f,e)};self.updateWidget=function(f){var e="updateWidget";self.log("NOEXEC: updateWidget: "+JSON.stringify(f),e)};self.updateTrigger=function(g,f){var e="updateTrigger";self.log("NOEXEC: updateTrigger: "+g,JSON.stringify(f),e)};self.fetchTriggerIds=function(){var e="fetchTriggerIds";self.log("NOEXEC: fetchTriggerIds",e);return[]};self.fetchTrigger=function(f){var e="fetchTrigger";self.log("NOEXEC: fetchTrigger: "+f,e)};self.deleteTrigger=function(f){var e="deleteTrigger";self.log("NOEXEC: deleteTrigger: "+f,e)};self.launchUrl=function(e){var f="launchUrl";self.log("NOEXEC: launchUrl: "+e,f)};self.launchApplication=function(f){var e="launchApplication";self.log("NOEXEC: launchApplication: "+url,e)};self.loadLibrary=function(g,e){var f=require(g);return f};self.vibrate=function(e){var f="vibrate";self.log("NOEXEC: vibrate: "+e,f)};self.getUserCfg=function(){var e="getUserCfg";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.log("entered & exiting",e);if(userCfg==null){userCfg=self.envConsts.userCfg.key}return userCfg};self.getAppCfg=function(){var e="getAppCfg";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.debug("entered",e);self.warn("NOT IMPLEMENTED FOR THIS EXECUTION CONTEXT.",e);self.debug("exiting",e);return self.appCfg};break;default:throw ("ERROR: invalid selected environment value: "+self.execCtx);break}},isNullOrUndefined:function(c){var d="isNullOrUndefined";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}return(c==null||c==undefined||c=="null")},isStringGt0Len:function(e){var d="isString";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var c=!self.isNullOrUndefined(e)&&_.isString(e)&&e.length>0;self.debug("s = "+e+"; ret = "+c,d);return c},genDateFromTime:function(i){var f="genDateFromTime";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.debug("entered",f);var e=i.split(":");var h=parseInt(e[0],10),c=parseInt(e[1],10),g=parseInt(e[2],10);var d=Date.today().set({hour:h,minute:c,second:g});self.debug("exiting",f);return d},iCalToDate:function(g){var i="iCalToDate";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var h=g.substr(0,4),j=(parseInt(g.substr(4,2),10))-1,k=g.substr(6,2),c=g.substr(9,2),e=g.substr(11,2),l=g.substr(13,2);var f=new Date(h,j,k,c,e,l);return f},getQuotedAndDelimitedStr:function(d,h,e,c){var g="getQuotedAndDelimitedStr";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.debug("entered; paramArray = "+d+"; delim = "+h+"; quoteChar = "+e+"; doNotQuoteTokens = "+c,g);var f=self.isNullOrUndefined(e)?"'":e;if(self.isNullOrUndefined(d)||d.length==0){return""}return _.reduce(_.map(d,function(i){return !self.isNullOrUndefined(c)&&_.isArray(c)&&_.contains(c,i)?i:f+i+f}),function(i,j){return d.length==1?j:i+h+j})},getRandomDateTimeWithinRange:function(c,e){var f="getRandomDateTimeWithinRange";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var i=e-c;var h=Math.random();var d=(Math.floor(h*i));var g=c.clone().addMilliseconds(d);return g},setDateTimeTrigger:function(d,k,c,h,o,n,m){var l="setDateTimeTrigger";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.debug("entered, for trigger name = "+c,l);switch(self.execCtx){case 0:case 1:self.debug("PR path",l);var f=o.toICal();var j=n.toICal();self.debug("Fetching all trigger IDs",l);if(_.contains(self.fetchTriggerIds(),d)){self.log("Deleting trigger: "+d,l);self.deleteTrigger(d)}self.debug("Trigger params: "+self.getQuotedAndDelimitedStr([c,h,o,f,n,j],","));var e="PurpleRobot.log('***** TRIGGER START! *****'); "+h+"; PurpleRobot.log('***** TRIGGER END! *****');";var p=d+"-actionScriptText";self.persistString(self.envConsts.appCfg.namespace,p,e);self.debug("Stored action string at ["+self.envConsts.appCfg.namespace+","+p+"] of: "+self.fetchString(self.envConsts.appCfg.namespace,p),l);var g=150>e.length?(e.length/2):150;self.debug("Stored action string at ["+self.envConsts.appCfg.namespace+","+p+"] of (displaying first and last "+g+" chars): "+e.substr(0,g)+" ... "+e.substr(e.length-g,g),l);var i={identifier:d,type:"datetime",name:c,action:"var actionScriptText = PurpleRobot.fetchString('"+self.envConsts.appCfg.namespace+"','"+p+'\'); PurpleRobot.log("[IN TRIGGER ACTION] eval()ing: " + actionScriptText);eval(\'\' + actionScriptText);PurpleRobot.log("[IN TRIGGER ACTION] did it eval?");',datetime_start:f,datetime_end:j,datetime_repeat:m,fire_on_boot:true};self.debug("triggerObj = "+JSON.stringify(i),l);self.log("updateTrigger for id = "+d+"; name = "+c+"; datetime_start = "+f+"; datetime_repeat = "+m,l);self.updateTrigger(d,i);break;case 2:self.warn("Not implemented for self.execCtx = "+self.execCtx,l);break;default:self.error("Invalid env: "+self.execCtx,l);break}self.debug("exiting",l)},appConfigSampleTrigger:function(){return{createdOn:"20130523T150900",createdInFn:"",completionState:0,completedOn:null,dstUrl:"your-router-path-here",triggerDef:{identifier:"test_id",type:"test_type",name:"test_name",action:"test_actionScriptText",datetime_start:"test_datetime_start",datetime_end:"test_datetime_end"}}},appCfgGetTriggerState:function(g,f,c,e){var d=self.appConfigSampleTrigger();d.createdOn=(new Date()).toICal();d.createdInFn=g;d.completionState=f;d.dstUrl=c;d.triggerDef=e;return d},appConfigCompletionStates:function(){var c="appConfigCompletionStates";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}return{NotStarted:"NotStarted",PromptedNoResponse:"PromptedNoResponse",PromptedPressedButton:"PromptedPressedButton",PromptedEnteredApp:"PromptedEnteredApp",PromptedInProgress:"PromptedInProgress",PromptedCompleted:"PromptedCompleted",CanceledByTrigger:"CanceledByTrigger",CanceledByApp:"CanceledByApp"}},appConfigCreate:function(d,e){var c="appConfigCreate";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var f=self.getAppCfg();if(f==null){self.warn("Creating appCfg in PR database.",c);self.persistEncryptedString(d,e,JSON.stringify({staticOrDefault:{transition:{}},dynamicOrModified:{transition:{}},triggerState:[]}))}else{self.warn("appCfg already exists in PR database; not creating.",c)}self.debug("CREATE("+[d,e]+")");return f},appConfigRead:function(d,e){var c="appConfigRead";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var f=self.fetchEncryptedString(d,e);self.debug("READ("+[d,e]+")");return f},appConfigUpsert:function(f,g,d){var e="appConfigUpsert";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var c=JSON.stringify(d);self.persistEncryptedString(f,g,c);self.debug("UPSERT("+[f,g,c]+")")},appConfigDelete:function(d,e){var c="appConfigDelete";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.persistEncryptedString(d,e,null);self.debug("DELETE("+[d,e]+")")},appConfigSetUrl:function(e,f,i,h){var d="appConfigSetUrl";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var g=self.appConfig.get(e,f);var c=_.findWhere(g.triggerState,{triggerDef:i});c.dstUrl=h;self.appConfig.set(e,f,c)},replaceTokensForEMA:function(f,c){var d="replaceTokensForEMA";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var e=f;_.each([{"%N":c.name},{"%T":(_.isDate(c.time)?c.time.toString("HH:mm:ss"):c.time.substr(11,8))}],function(h){var g=_.keys(h)[0];e=e.replace(g,h[g])});return e},genEMAPromptTriggerId:function(c){var d="genEMAPromptTriggerId";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.debug("entered",d);var e=self.replaceTokensForEMA((self.getAppCfg()).staticOrDefault.showNativeDialog.assessment.identifier,c);return e},getOpenTimeRanges:function(m,l,f,c){var k="getOpenTimeRanges";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.debug("entered; medPromptTriggerDateTimes = "+f+"; rangeBoundsBufferMinutes = "+c,k);var j=[];var e=!self.isNullOrUndefined(f)&&f.length>0;var d=self.genDateFromTime(m);var h=e?f[0].clone().addMinutes(-(c)):self.genDateFromTime(l);if(d<h){j.push({start:d,end:h})}if(e){for(var g=0;g<f.length;g++){if(g<f.length-1){d=f[g].clone().addMinutes(c);h=f[g+1].clone().addMinutes(-(c));if(h>d){j.push({start:d,end:h})}}}d=f[f.length-1].clone().addMinutes(c),h=self.genDateFromTime(l);if(d<h){j.push({start:d,end:h})}}self.debug("exiting; openTimeRanges = "+JSON.stringify(j),k);return j},getRandomDateTime:function(h){var g="getRandomDateTime";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var e=null;var c=Math.floor((Math.random()*h.length));var f=h[c].start;var d=h[c].end;self.debug("startTime = "+f+"; endTime = "+d,g);e=self.getRandomDateTimeWithinRange(f,d);return e},getOpenTimeRangesMultipliedForSchedulingFrequencyAsICal:function(e,c){var d="getOpenTimeRangesMultipliedForSchedulingFrequencyAsICal";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.debug("entered; openTimeRanges = "+JSON.stringify(e)+"; schedulingFrequencyAsICal = "+c,d);switch(c){case"DAILY":return e;break;case"WEEKLY":var f=[];_.each(e,function(g){for(var h=0;h<6;h++){f.push({start:g.start.clone().addDays(h),end:g.end.clone().addDays(h)})}});return f;break;case"MONTHLY":throw"NotImplemented; use DAILY or WEEKLY instead, or implement.";break}},getScheduledAndUnscheduledEMAs:function(d,l){var h="getScheduledAndUnscheduledEMAs";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.debug("entered; medPromptTriggerDateTimes = "+d,h);var k=self.userCfg.promptBehavior.wakeSleepTimes.daily.wakeTime;var i=self.userCfg.promptBehavior.wakeSleepTimes.daily.sleepTime;var f=self.getOpenTimeRanges(k,i,d,self.appCfg.staticOrDefault.showNativeDialog.assessment.minTimeFromMedPromptMins);var e=self.getOpenTimeRangesMultipliedForSchedulingFrequencyAsICal(f,l);var g=_.filter(_.keys(self.appCfg.staticOrDefault.showNativeDialog.assessment.frequencyAsICal),function(m){return self.appCfg.staticOrDefault.showNativeDialog.assessment.frequencyAsICal[m]==l});self.debug("emaTransitionObjs = "+g,h);var j=_.map(g,function(n){var m={name:n,time:self.getRandomDateTime(e),parentId:null,childId:null,triggerId:null};m.id=self.getEMAIDStr(self.appCfg.staticOrDefault.namespace,m.name,m.time);self.debug("survSched = "+JSON.stringify(m),h);return m});self.debug("scheduledEMAs = "+JSON.stringify(j));var c=_.filter(j,function(m){return m.time==null});self.debug("unscheduledEMAs = "+JSON.stringify(c),h);return[j,c]},setScheduledEMA:function(i,f,r){var k="setScheduledEMA";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var h=JSON.stringify(i);self.debug("schedObj = "+h,k);var d=i.time;self.debug("sdt = "+d,k);var j="datetime",q=self.genEMAPromptTriggerId(i),g=null,p=d,o=d.clone().addMinutes(1),e=(new Date()).addDays(1);var n="FREQ="+r+";INTERVAL=1;UNTIL="+e.toICal();self.debug("triggerId = "+q,k);i.triggerId=q;if(i.childId==null){var l=_.find(f,function(s){return s.id==i.parentId});l.childTriggerId=q}var m=self.getQuotedAndDelimitedStr([self.replaceTokensForEMA(self.appCfg.staticOrDefault.showNativeDialog.assessment.title,i),self.replaceTokensForEMA(self.appCfg.staticOrDefault.showNativeDialog.assessment.message,i),"OK",null,self.convertFnToString(self.actions.onEMAYes,[self.actionFns.getCommonFnSetForActions()+self.actionFns.getTriggerFns()+self.actionFns.getEMAPromptFns()+self.actionFns.getAppCfgFns()+"var schedObj = "+h+';var triggerId = "'+q+'";var childTriggerId = '+(i.childId==null?null:'"'+i.childTriggerId+'"')+";"]),null],",","'",[null]);g='PurpleRobot.vibrate("'+self.appCfg.staticOrDefault.vibratePattern+'");PurpleRobot.playDefaultTone();PurpleRobot.showNativeDialog('+m+");";var c=self.appCfg.staticOrDefault.showNativeDialog.assessment.title+", EMA@"+p.toString("MM/dd h:mmtt");self.setDateTimeTrigger(q,j,c,g,p,o,n)},isDayToRunWeeklyScheduling:function(d){var c="isDayToRunWeeklyScheduling";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var e=self.isNullOrUndefined(d)?(new Date()):d;self.debug("entered; run day = "+self.appCfg.staticOrDefault.weeklyScheduleRunDay+"; calcDate = "+e,c);self.getAppCfg();return e.getDay()==Date.getDayNumberFromName(self.appCfg.staticOrDefault.weeklyScheduleRunDay)},getEMAIDStr:function(d,c,e){return d+c+e},setAllEMAPrompts:function(c){var d="setAllEMAPrompts";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.log("entered; medPromptTriggerDateTimes = "+c,d);self.getUserCfg();self.getAppCfg();_.each(["DAILY","WEEKLY"],function(f){if(f=="WEEKLY"&&!self.isDayToRunWeeklyScheduling()){return}var i=self.getScheduledAndUnscheduledEMAs(c,f);var h=i[0];var e=i[1];if(e.length>0){var g="ERROR: the following EMAs do not have a randomly-scheduled time: "+_.pluck(e,"name");self.error(g,d);self.updateWidget({identifier:self.envConsts.appCfg.namespace,title:self.appCfg.staticOrDefault.updateWidget.title,message:g,action:'PurpleRobot.launchApplication("com.google.android.gm");'})}else{h=h.concat(_.map(h,function(k){var j=_.clone(k);j.time=j.time.clone().addMinutes(self.appCfg.staticOrDefault.updateWidget.widgetState.nonResponsive.TTLinMins);j.parentId=k.id;j.id=self.getEMAIDStr(self.appCfg.staticOrDefault.namespace,j.name,j.time);j.triggerId=null;k.childId=j.id;return j}));self.debug("*** scheduledEMAs.length = "+h.length,d);self.debug("*** JSON.stringify(scheduledEMAs) = "+JSON.stringify(h),d);h.reverse();_.each(h,function(j){self.setScheduledEMA(j,h,f)})}});self.log("exiting",d)},replaceTokensForMedPrompt:function(f,c){var d="replaceTokensForMedPrompt";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var e=f;self.debug("entered; outStr = "+e+"; dose = "+JSON.stringify(c),d);var g=(self.getAppCfg()).staticOrDefault.timeFormat;_.each([{"%M":c.medication},{"%T":(self.genDateFromTime(c.time)).toString(g)},{"%S":c.strength},{"%U":c.dispensationUnit},{"%O":c.timeOffsetStr?c.timeOffsetStr:""}],function(i){var h=_.keys(i)[0];e=e.replace(h,i[h])});self.debug("exiting; outStr = "+e,d);return e},replaceTokensForUser:function(f){var d="replaceTokensForUser";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var e=f;var c=(self.getUserCfg());_.each([{"%USER":(function(){var g=_.find(c.people,function(h){return h.type=="patient"});return(!self.isNullOrUndefined(g)&&self.isStringGt0Len(g.id))?g.id:"NO_PERSON_ID_FOUND_CHECK_USERCFG"})()}],function(h){var g=_.keys(h)[0];e=e.replace(g,h[g])});return e},genMedPromptTriggerId:function(c){var d="genMedPromptTriggerId";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.debug("entered; dose = "+JSON.stringify(c),d);var e=self.replaceTokensForMedPrompt((self.getAppCfg()).staticOrDefault.showNativeDialog.medPrompt.identifier,c);self.debug("exiting; id = "+e,d);return e},genMedPromptShowNativeDialogParams:function(f,d,c){var e=self.getQuotedAndDelimitedStr([self.replaceTokensForMedPrompt(self.appCfg.staticOrDefault.showNativeDialog.medPrompt.title,c),self.replaceTokensForMedPrompt(self.appCfg.staticOrDefault.showNativeDialog.medPrompt.message,c),"Yes","No",self.convertFnToString(self.actions.onMedPromptYes,[self.actionFns.getCommonFnSetForActions()+self.actionFns.getTriggerFns()+self.actionFns.getMedPromptFns()+self.actionFns.getAppCfgFns()+self.actionFns.getUserCfg()+self.actionFns.getWidgetFns()+"var dose = "+d+';var triggerId = "'+f+'";']),self.convertFnToString(self.actions.onMedPromptNo,[self.actionFns.getCommonFnSetForActions()+self.actionFns.getTriggerFns()+self.actionFns.getMedPromptFns()+self.actionFns.getAppCfgFns()+self.actionFns.getUserCfg()+self.actionFns.getWidgetFns()+"var dose = "+d+';var triggerId = "'+f+'";'])],",","'");return e},getMedPromptActionText:function(h,d,c){var e="getMedPromptActionText";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var g=self.genMedPromptShowNativeDialogParams(h,d,c);self.debug("ENTERED: triggerId = "+h+"; doseStr = "+d+"; dose = "+JSON.stringify(c)+"; _.keys(dose) = "+_.keys(c)+"; self.appCfg.staticOrDefault.medPrompt.wisePillLastSeenUrl = "+self.appCfg.staticOrDefault.medPrompt.wisePillLastSeenUrl,e);var f="PurpleRobot.log('[INF]["+e+'] ENTERED: triggerId = "'+h+'"; doseStr = "'+d+'"; dose = "'+c+"\"');PurpleRobot.loadLibrary('date.js');PurpleRobot.loadLibrary('underscore.js');var url = \""+self.replaceTokensForUser(self.appCfg.staticOrDefault.medPrompt.wisePillLastSeenUrl)+"\";PurpleRobot.log('[INF]["+e+"] url = ' + url);var wisePillIntegrationResponse = PurpleRobot.readUrl(url);var wisePillLastSeenDateTimeStr = (wisePillIntegrationResponse == null || wisePillIntegrationResponse == undefined || wisePillIntegrationResponse.indexOf(\"error\")) > -1 ? null : wisePillIntegrationResponse.trim();PurpleRobot.log('[INF]["+e+"] wisePillLastSeenDateTimeStr = \"' + wisePillLastSeenDateTimeStr + '\"');if (wisePillLastSeenDateTimeStr != null && wisePillLastSeenDateTimeStr != undefined) {  var now = new Date();  PurpleRobot.log('[INF]["+e+"] now = ' + now);  var wisePillLastSeenDateTime = new Date(wisePillLastSeenDateTimeStr);  wisePillLastSeenDateTime = new Date(wisePillLastSeenDateTime.getTime() + (wisePillLastSeenDateTime.getTimezoneOffset() * 60000));  PurpleRobot.log('[INF]["+e+"] wisePillLastSeenDateTime = ' + wisePillLastSeenDateTime);  var currDateMinusNMin = now.addMinutes(-5);  PurpleRobot.log('[INF]["+e+"] currDateMinusNMin = ' + new Date(currDateMinusNMin));  PurpleRobot.log('[INF]["+e+"] (wisePillLastSeenDateTime >= currDateMinusNMin) = ' + (wisePillLastSeenDateTime >= currDateMinusNMin));  PurpleRobot.log('[INF]["+e+"] (wisePillLastSeenDateTime - currDateMinusNMin) = ' + (wisePillLastSeenDateTime - currDateMinusNMin));  if(wisePillLastSeenDateTime >= currDateMinusNMin) {    PurpleRobot.log('[INF]["+e+"] 6');    PurpleRobot.persistString('"+self.envConsts.appCfg.namespace+"', 'pillboxOpened','true');    PurpleRobot.deleteTrigger('"+h+"');    PurpleRobot.log('[INF]["+e+"] (path 1) Wisepill opened; not displaying dialog.');  }  else {    PurpleRobot.log('[INF]["+e+"] 7');    PurpleRobot.persistString('"+self.envConsts.appCfg.namespace+"', 'pillboxOpened','false');    PurpleRobot.vibrate('"+(self.getAppCfg()).staticOrDefault.vibratePattern+"');    PurpleRobot.playDefaultTone();    PurpleRobot.showNativeDialog("+g+");    PurpleRobot.log('[INF]["+e+"] (path 2) Wisepill NOT opened; did dialog display?');  }}else {  PurpleRobot.vibrate('"+(self.getAppCfg()).staticOrDefault.vibratePattern+"');  PurpleRobot.playDefaultTone();  PurpleRobot.showNativeDialog("+g+");  PurpleRobot.log('[INF]["+e+"] (path 3) Wisepill not used or data otherwise unavailable; did dialog display?');}PurpleRobot.log('[INF]["+e+"] EXITING');";self.debug("actionScriptText = "+f,e);return f},getSortedDoses:function(){var c="getSortedDoses";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.debug("entered",c);return self.userCfg.doses.sort(function(e,d){return self.genDateFromTime(e.time)-self.genDateFromTime(d.time)})},getNextDoseDateTime:function(f){var e="getNextDoseDateTime";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.debug("entered",e);var d=self.getNextDose(f);self.debug("JSON.stringify(nextDose) = "+JSON.stringify(d),e);var c=(self.genDateFromTime(d.dose.time)).addDays(d.offsetFromNowInDays);self.log("exiting; nextDoseDateTime = "+c,e);return c},getNextDose:function(g){var f="getNextDose";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.debug("entered",f);self.getUserCfg();var d=!self.isNullOrUndefined(g)?g:self.getSortedDoses();self.debug("doses.length = "+(!self.isNullOrUndefined(d)?d.length:0),f);var c=new Date();for(var e=0;e<d.length;e++){var h=self.genDateFromTime(d[e].time)>c;self.debug("doseTimeNewerThanCurrTime = "+h,f);if(h){self.debug("exiting (doses["+e+"])",f);return{offsetFromNowInDays:0,dose:d[e]}}}self.debug("exiting (doses[0])",f);return{offsetFromNowInDays:1,dose:d[0]}},getMostRecentDose:function(e){var j="getMostRecentDose";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.debug("entered",j);self.getUserCfg();var d=!self.isNullOrUndefined(e)?e:self.getSortedDoses();self.debug("doses.length = "+(!self.isNullOrUndefined(d)?d.length:0),j);var g=new Date();for(var f=0;f<d.length;f++){var l=(f==0)?(d.length-1):f-1;var c=self.genDateFromTime(d[l].time);c=(f==0)?c.addDays(-1):c;var h=c<=g;var k=self.genDateFromTime(d[f].time)>g;self.debug("prevDoseTimeLeThanCurrTime = "+h+"; doseTimeGtCurrTime = "+k,j);if(h&&k){self.debug("exiting (doses["+l+"])",j);return{offsetFromNowInDays:0,dose:d[l]}}}self.debug("exiting (doses["+(d.length-1)+"])",j);return{offsetFromNowInDays:-1,dose:d[d.length-1]}},getMedPromptTriggerIdDelayed:function(c){var e="getMedPromptTriggerIdDelayed";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.debug("entered",e);var d=self.genMedPromptTriggerId(c);self.debug("medPromptTriggerId = "+d,e);var f=d+"+"+self.appCfg.staticOrDefault.updateWidget.widgetState.nonResponsive.TTLinMins+"min";self.debug("exiting; medPromptTriggerIdDelayed = "+f,e);return f},setAllMedPrompts:function(){var e="setAllMedPrompts";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.log("entered",e);self.getUserCfg();self.getAppCfg();var h=[];var d="datetime";var g=self.getSortedDoses();var f=new Date();self.log("Generating MedPropmts...",e);_.each(g,function(q,o){var p=JSON.stringify(q);self.log("*** ADDING DOSE ***: d = "+p,e);var k=self.genDateFromTime(q.time);k=(k<=f)?k.addDays(1):k;self.debug("sdt = "+k,e);var s=self.genMedPromptTriggerId(q),n=null,u=k,t=k.clone().addMinutes(1),m=(new Date()).addDays(1);self.debug("triggerId = "+s,e);var r="FREQ=DAILY;INTERVAL=1;UNTIL="+m.toICal();n=self.getMedPromptActionText(s,p,q);var j=self.appCfg.staticOrDefault.showNativeDialog.medPrompt.title+", MP";self.setDateTimeTrigger(s,d,j,n,u,t,r);self.debug("Pushing triggerId = "+s+"; name = "+j,e);h.push(s);var l=self.getMedPromptTriggerIdDelayed(q);n=self.getMedPromptActionText(l,p,q);j=j+" +"+self.appCfg.staticOrDefault.updateWidget.widgetState.nonResponsive.TTLinMins+"min";self.setDateTimeTrigger(l,d,j,n,u.clone().addMinutes(self.appCfg.staticOrDefault.updateWidget.widgetState.nonResponsive.TTLinMins),t.addMinutes(self.appCfg.staticOrDefault.updateWidget.widgetState.nonResponsive.TTLinMins),r)});self.log("Getting all MedPrompt datetimes...",e);var c=self.getAllMedPromptDateTimes(h);self.debug("medPromptTriggerDateTimes = "+c,e);c.sort(function(j,i){return j-i});self.log("Generating MedPrompt widget-management triggers...",e);_.each(g,function(L,I){var p=self.genDateFromTime(L.time);self.debug("Generating Active state trigger starting "+self.appCfg.staticOrDefault.updateWidget.widgetState.active.reminderMinutesBeforeDose.first+" from the prompt time.",e);L.timeOffsetStr="-"+self.appCfg.staticOrDefault.updateWidget.widgetState.active.reminderMinutesBeforeDose.first+"min:W";var w=self.genMedPromptTriggerId(L);var N=p.clone().addMinutes(-(self.appCfg.staticOrDefault.updateWidget.widgetState.active.reminderMinutesBeforeDose.first));var n=N.clone().addMinutes(1);var F=p.clone().addMinutes(-(self.appCfg.staticOrDefault.updateWidget.widgetState.active.reminderMinutesBeforeDose.second));var y="FREQ=MINUTELY;INTERVAL=1;UNTIL="+F.toICal();self.debug(self.getQuotedAndDelimitedStr([w,p.clone(),N,n,F,y],",","'"),e);var x=self.getWidgetReminderTriggerActionText(p,self.appCfg.staticOrDefault.updateWidget.widgetState.active.message,[{image:self.appCfg.staticOrDefault.updateWidget.widgetState.active.imageUrl}]);self.debug("actionScriptTextFirstPrior = "+x,e);var J=w;self.setDateTimeTrigger(w,d,J,x,N,n,y);self.debug("Generating Active state trigger starting "+self.appCfg.staticOrDefault.updateWidget.widgetState.active.reminderMinutesBeforeDose.second+" from the prompt time.",e);L.timeOffsetStr="-"+self.appCfg.staticOrDefault.updateWidget.widgetState.active.reminderMinutesBeforeDose.second+"min:W";var r=self.genMedPromptTriggerId(L);var D=p.clone().addMinutes(-(self.appCfg.staticOrDefault.updateWidget.widgetState.active.reminderMinutesBeforeDose.second));var q=D.clone().addMinutes(1);var u=p.clone().addMinutes(-1);var A="FREQ=MINUTELY;INTERVAL=1;UNTIL="+u.toICal();self.debug(self.getQuotedAndDelimitedStr([r,p.clone(),D,q,u,A],",","'"),e);var v=self.getWidgetReminderTriggerActionText(p,self.appCfg.staticOrDefault.updateWidget.widgetState.active.message,[{message_color:self.appCfg.staticOrDefault.updateWidget.widgetState.active.textColor},{title_color:self.appCfg.staticOrDefault.updateWidget.widgetState.active.textColor},{image:self.appCfg.staticOrDefault.updateWidget.widgetState.active.imageUrl}]);v+="if(minutesBeforeDose == "+self.appCfg.staticOrDefault.updateWidget.widgetState.active.reminderMinutesBeforeDose.second+") { PurpleRobot.vibrate('"+self.appCfg.staticOrDefault.vibratePattern+"'); PurpleRobot.playDefaultTone(); }";self.debug("actionScriptTextSecondPrior = "+v,e);var H=r;self.setDateTimeTrigger(r,d,H,v,D,q,A);self.debug("Generating Non-Responsive state trigger starting at the prompt time ("+p+").",e);L.timeOffsetStr="+0min:W";var E=self.genMedPromptTriggerId(L);var m=p.clone().addSeconds(30);var s=m.clone().addMinutes(1);var o=p.clone().addMinutes(self.appCfg.staticOrDefault.updateWidget.widgetState.nonResponsive.TTLinMins);var t="FREQ=MINUTELY;COUNT=1";self.debug(self.getQuotedAndDelimitedStr([E,p.clone(),m,s,o,t],",","'"),e);var z=self.getWidgetReminderTriggerActionText(self.getNextDoseDateTime(),self.appCfg.staticOrDefault.updateWidget.widgetState.nonResponsive.message,[{message_color:self.appCfg.staticOrDefault.updateWidget.widgetState.nonResponsive.textColor},{title_color:self.appCfg.staticOrDefault.updateWidget.widgetState.nonResponsive.textColor},{image:self.appCfg.staticOrDefault.updateWidget.widgetState.nonResponsive.imageUrl}]);self.debug("actionScriptTextNonResponsive = "+z,e);var l=E;self.setDateTimeTrigger(E,d,l,z,m,s,t);self.debug("Generating Neutral state trigger starting at the prompt time ("+p+").",e);L.timeOffsetStr="+"+self.appCfg.staticOrDefault.updateWidget.widgetState.nonResponsive.TTLinMins+"min:W";var k=self.genMedPromptTriggerId(L);var B=p.clone().addMinutes(self.appCfg.staticOrDefault.updateWidget.widgetState.nonResponsive.TTLinMins);var M=B.clone().addMinutes(1);var K=B.clone().addMinutes(1);var C="FREQ=MINUTELY;COUNT=1";self.debug(self.getQuotedAndDelimitedStr([k,p.clone(),B,M,K,C],",","'"),e);var j=self.getWidgetReminderTriggerActionText(self.getNextDoseDateTime(),self.appCfg.staticOrDefault.updateWidget.widgetState.neutral.message,[{message_color:self.appCfg.staticOrDefault.updateWidget.widgetState.neutral.textColor},{title_color:self.appCfg.staticOrDefault.updateWidget.widgetState.neutral.textColor},{image:self.appCfg.staticOrDefault.updateWidget.widgetState.neutral.imageUrl}]);self.debug("actionScriptTextNeutral = "+j,e);var G=k;self.setDateTimeTrigger(k,d,G,j,B,M,C)});self.log("exiting",e);return c},getWidgetReminderTriggerActionText:function(c,f,e){var d="getWidgetReminderTriggerActionText";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.getAppCfg();self.debug("returning",d);return"PurpleRobot.log('[INF]["+d+"] ENTERED');var self = this;self.appCfg = {};self.appCfg.logLevel = '"+self.appCfg.logLevel+"';self.envConsts = "+JSON.stringify(self.envConsts)+";self.genDateFromTime = function(timeStr) { var fn = 'genDateFromTime';        var tarr = timeStr.split(':');        var th = parseInt(tarr[0], 10),            tm = parseInt(tarr[1], 10),            ts = parseInt(tarr[2], 10);        var date = Date.today().set({ hour: th, minute: tm, second: ts});        return date;      };self.getSortedDoses = function() { var fn = 'getSortedDoses'; self.debug('entered',fn);        return self.userCfg.doses.sort(function(a,b) {          return self.genDateFromTime(a.time) - self.genDateFromTime(b.time);        });      };self.getUserCfg = function() { var fn = 'getUserCfg';              self.debug('entered',fn);              if(self.userCfg==null) {                 self.debug('fetching userCfg on first call...', fn);                self.userCfg = JSON.parse(PurpleRobot.fetchEncryptedString(self.envConsts.userCfg.namespace, self.envConsts.userCfg.key));                 }              self.debug('exiting',fn);              return self.userCfg;            };self.debug = function(s, fn) { if(self.appCfg.logLevel >= 4) { PurpleRobot.log('[INF]' + (!(fn == null || fn == undefined || fn == 'null') ? '[' + fn + '] ' : ' ') + s); } };self.fetchString = function(namespace, key) { return PurpleRobot.fetchString(namespace,key); };self.isNullOrUndefined = function(v) { var fn = 'isNullOrUndefined';  return (v == null || v == undefined || v == 'null'); };self.getPoints = function() {  var fn = \"getPoints\";   var pointsFromPr = self.fetchString('"+self.envConsts.appCfg.namespace+"', 'points');  self.debug('pointsFromPr = ' + pointsFromPr, fn);  var ret = 'zero';  if(!self.isNullOrUndefined(pointsFromPr) && !isNaN(pointsFromPr)) {    self.debug('pointsFromPr = ' + pointsFromPr, fn);    ret = pointsFromPr;  }  else {    self.debug('No points path...', fn);  }  return ret; };self.getNextDose = function(sortedDoses) { var self = this; var fn = 'getNextDose'; self.debug('entered',fn);        self.getUserCfg();        var doses = !self.isNullOrUndefined(sortedDoses) ? sortedDoses : self.getSortedDoses();        self.debug('doses.length = ' + (!self.isNullOrUndefined(doses) ? doses.length : 0),fn);        var currTime = new Date();        for(var i = 0; i < doses.length; i++) {          var doseTimeNewerThanCurrTime = self.genDateFromTime(doses[i].time) > currTime;          self.debug('doseTimeNewerThanCurrTime = ' + doseTimeNewerThanCurrTime, fn);          if(doseTimeNewerThanCurrTime) {            self.debug('exiting (doses[' + i + '])',fn);            return { 'offsetFromNowInDays': 0, 'dose': doses[i] };          }        }        self.debug('exiting (doses[0])',fn);        return { 'offsetFromNowInDays': 1, 'dose': doses[0] };      };self.getNextDoseDateTime = function(sortedDoses) { var fn = 'getNextDoseDateTime'; self.debug('entered',fn); var nextDose = self.getNextDose(sortedDoses); self.debug('JSON.stringify(nextDose) = ' + JSON.stringify(nextDose), fn); var nextDoseDateTime = (self.genDateFromTime(nextDose.dose.time)).addDays(nextDose.offsetFromNowInDays); self.debug('exiting; nextDoseDateTime = ' + nextDoseDateTime,fn); return nextDoseDateTime; };PurpleRobot.loadLibrary('date.js');var nMinsPrio = 5;var url = \""+self.replaceTokensForUser(self.appCfg.staticOrDefault.medPrompt.wisePillLastSeenUrl)+"\";PurpleRobot.log('[INF]["+d+"] url = ' + url);var wisePillIntegrationResponse = PurpleRobot.readUrl(url);var wisePillLastSeenDateTimeStr = (self.isNullOrUndefined(wisePillIntegrationResponse) || wisePillIntegrationResponse.indexOf(\"error\")) > -1 ? null : wisePillIntegrationResponse.trim();PurpleRobot.log('[INF]["+d+"] wisePillLastSeenDateTimeStr = ' + wisePillLastSeenDateTimeStr + '; wisePillLastSeenDateTimeStr === null = ' + (wisePillLastSeenDateTimeStr === null));var timeFormat = '"+self.appCfg.staticOrDefault.timeFormat+"';var nextDoseDateTime = new Date('"+c.toISOString()+"');var minutesBeforeDose = Math.round((Math.abs(nextDoseDateTime.getTime() - (new Date()).getTime())) / 1000 / 60);var points = self.getPoints();var tokenArr = [ '%T', '%ETAMIN', '%P' ];var doDefaultWidgetUpdate = true;if(!self.isNullOrUndefined(wisePillLastSeenDateTimeStr)) {  var wisePillLastSeenDateTime = new Date(wisePillLastSeenDateTimeStr);  wisePillLastSeenDateTime = new Date(wisePillLastSeenDateTime.getTime() + (wisePillLastSeenDateTime.getTimezoneOffset() * 60000));  PurpleRobot.log('[INF]["+d+"] wisePillLastSeenDateTime = ' + wisePillLastSeenDateTime);  var now = new Date();  var currDateMinusNMin = new Date(now.addMinutes(-(nMinsPrio)));  PurpleRobot.log('[INF]["+d+"] minutesBeforeDose = ' + minutesBeforeDose + '; currDateMinusNMin = ' + currDateMinusNMin);  if(minutesBeforeDose <= nMinsPrio && currDateMinusNMin < wisePillLastSeenDateTime) {    PurpleRobot.log('[INF]["+d+"] currDateMinusNMin < wisePillLastSeenDateTime');    var dispStr = '"+self.appCfg.staticOrDefault.updateWidget.widgetState.neutral.message+"';    for (var i = 0; i < tokenArr.length; i++) {      if(i==0) { dispStr = dispStr.replace(tokenArr[i], nextDoseDateTime.toString(timeFormat)); }      if(i==1) { dispStr = dispStr.replace(tokenArr[i], minutesBeforeDose); }      if(i==2) { dispStr = dispStr.replace(tokenArr[i], points); }    }    PurpleRobot.log('[INF]["+d+"] updating widget to Neutral state with dispStr = "+f+"');    var updateWidgetParams = {      'identifier': '"+self.envConsts.appCfg.namespace+"'     ,'message_color': '"+self.appCfg.staticOrDefault.updateWidget.widgetState.neutral.textColor+"'     ,'\"title_color':  '"+self.appCfg.staticOrDefault.updateWidget.widgetState.neutral.textColor+"'     ,'image':  '"+self.appCfg.staticOrDefault.updateWidget.widgetState.neutral.imageUrl+"'     ,'message': dispStr    };    PurpleRobot.updateWidget(updateWidgetParams);    PurpleRobot.log('[INF]["+d+"] widget updated!');    doDefaultWidgetUpdate = false;  }}if(doDefaultWidgetUpdate) {  var dispStr = '"+f+"';  for (var i = 0; i < tokenArr.length; i++) {    if(i==0) { dispStr = dispStr.replace(tokenArr[i], nextDoseDateTime.toString(timeFormat)); }    if(i==1) { dispStr = dispStr.replace(tokenArr[i], minutesBeforeDose); }    if(i==2) { dispStr = dispStr.replace(tokenArr[i], points); }  }  var updateWidgetParams = {      'identifier': '"+self.envConsts.appCfg.namespace+"',      'message': dispStr    };"+(self.isNullOrUndefined(e)?"":(_.reduce(_.map(e,function(g){return'updateWidgetParams["'+_.keys(g)+'"] = "'+_.values(g)+'";'}),function(g,h){return g+h})))+"  PurpleRobot.log('[INF]["+d+"] Updating widget; updateWidgetParams = ' + JSON.stringify(updateWidgetParams));  PurpleRobot.updateWidget(updateWidgetParams);}PurpleRobot.log('[INF]["+d+"] EXITING');"},setWidgetToNeutralState:function(){var j="setWidgetToNeutralState";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.log("entered",j);self.getUserCfg();var f=self.getNextDoseDateTime();PurpleRobot.loadLibrary("date.js");var l=""+self.appCfg.staticOrDefault.updateWidget.widgetState.neutral.message+"";var d=""+self.appCfg.staticOrDefault.timeFormat+"";var f=new Date(f.getFullYear(),f.getMonth(),f.getDate(),f.getHours(),f.getMinutes(),f.getSeconds());var h=Math.round((Math.abs(f.getTime()-(new Date()).getTime()))/1000/60);var k=self.getPoints();var c=["%T","%ETAMIN","%P"];for(var e=0;e<c.length;e++){if(e==0){l=l.replace(c[e],f.toString(d))}if(e==1){l=l.replace(c[e],h)}if(e==2){l=l.replace(c[e],k)}}var g={identifier:""+self.envConsts.appCfg.namespace+"",message:l,message_color:self.appCfg.staticOrDefault.updateWidget.widgetState.neutral.textColor,title_color:self.appCfg.staticOrDefault.updateWidget.widgetState.neutral.textColor,image:self.appCfg.staticOrDefault.updateWidget.widgetState.neutral.imageUrl};PurpleRobot.log("[DBG]["+j+"] Updating widget; updateWidgetParams = "+JSON.stringify(g));PurpleRobot.updateWidget(g);self.log("exiting",j)},replaceTokensForWidget:function(f,c){var d="replaceTokensForWidget";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var e=f;var g=(self.getAppCfg()).staticOrDefault.timeFormat;_.each([{"%T":c.toString(g)},{"%ETAMIN":Math.round((Math.abs(c.getTime()-(new Date()).getTime()))/1000/60)},{"%P":self.getPoints()}],function(i){var h=_.keys(i)[0];e=e.replace(h,i[h])});return e},appendNonZeroLenValueToWidgetParams:function(d,c,f){var e="appendNonZeroLenValueToWidgetParams";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}if(self.isStringGt0Len(f)){self.debug("key = "+c+"; value = "+f,e);d[c]=f}return d},getPoints:function(){var e="getPoints";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var c=self.fetchString(self.envConsts.appCfg.namespace,"points");self.debug("pointsFromPr = "+c,e);var d="zero";if(!self.isNullOrUndefined(c)&&!isNaN(c)){self.debug("pointsFromPr = "+c,e);d=c}else{self.debug("No points path...",e)}return d},setWidget:function(h,g){var m="setWidget";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.log("entered; widgetId = "+h+"; medPromptTriggerDateTimes = "+g,m);self.getAppCfg();self.getUserCfg();var c=_.sortBy(g,function(o){return o});if(c.length==0){self.error("No next MedPrompt time found!",m);return}var n=new Date();var i=self.getNextDoseDateTime();var k=i>n.addMinutes(parseInt(self.appCfg.staticOrDefault.updateWidget.widgetState.active.reminderMinutesBeforeDose.first));var e=k?self.appCfg.staticOrDefault.updateWidget.widgetState.neutral.message:self.appCfg.staticOrDefault.updateWidget.widgetState.active.message;var l={identifier:h,title:self.appCfg.staticOrDefault.updateWidget.title,message:i!=null?self.replaceTokensForWidget(e,i):self.appCfg.staticOrDefault.updateWidget.widgetState.neutral.message,action:""};var d=k?self.appCfg.staticOrDefault.updateWidget.widgetState.neutral.imageUrl:self.appCfg.staticOrDefault.updateWidget.widgetState.active.imageUrl;self.appendNonZeroLenValueToWidgetParams(l,"image",d);var f=k?self.appCfg.staticOrDefault.updateWidget.widgetState.neutral.textColor:self.appCfg.staticOrDefault.updateWidget.widgetState.active.textColor;self.appendNonZeroLenValueToWidgetParams(l,"message_color",f);self.appendNonZeroLenValueToWidgetParams(l,"title_color",f);self.debug("_.keys(updateWidgetParams) = "+_.keys(l),m);var j=1024;self.debug("_.values(updateWidgetParams) = "+_.map(_.values(l),function(o){return(!self.isNullOrUndefined(o)&&o.length>j?o.substr(0,2*j)+" ...TRUNCATING... "+o.substr(o.length-j,j):o)}),m);self.updateWidget(l);self.log("exiting",m)},actionFns:{getCommonFnSetForActions:function(){var d="getCommonFnSetForActions";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var c='this["CURRENTLY_IN_TRIGGER"] = true;var self = this;self.ctor = self;self.envConsts = '+JSON.stringify(self.envConsts)+";self.triggerIdPrefixes = "+JSON.stringify(self.triggerIdPrefixes)+";self.fetchString = "+self.fetchString.toString()+";self.persistString = "+self.persistString.toString()+";self.fetchEncryptedString = "+self.fetchEncryptedString.toString()+";self.persistEncryptedString = "+self.persistEncryptedString.toString()+";self.isNullOrUndefined = "+self.isNullOrUndefined.toString()+";self.log = "+self.log.toString()+";self.debug = "+self.debug.toString()+";self.getAppCfg = "+self.getAppCfg.toString()+";self.appCfg = self.getAppCfg();self.loadLibrary = "+self.loadLibrary.toString()+";self.launchApplication = "+self.launchApplication.toString()+';var _ = self.loadLibrary("underscore.js", "_");self.loadLibrary("date.js", null);Date.prototype.toICal = '+Date.prototype.toICal.toString()+";self.iCalToDate = "+self.iCalToDate.toString()+";";return c},getUserCfg:function(){var d="getUserCfg";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var c='var userCfgStr = self.fetchEncryptedString("'+self.envConsts.userCfg.namespace+'", "'+self.envConsts.userCfg.key+'");self.userCfg = JSON.parse(userCfgStr);self.getUserCfg = '+self.getUserCfg.toString()+";";return c},getTriggerFns:function(){var d="getTriggerFns";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var c="self.fetchTriggerIds = "+self.fetchTriggerIds.toString()+";self.fetchTrigger = "+self.fetchTrigger.toString()+";self.deleteTrigger = "+self.deleteTrigger.toString()+";";return c},getMedPromptFns:function(){var d="getTriggerFns";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var c="self.genMedPromptTriggerId = "+self.genMedPromptTriggerId.toString()+";self.replaceTokensForMedPrompt = "+self.replaceTokensForMedPrompt.toString()+";self.genDateFromTime = "+self.genDateFromTime.toString()+";self.getPoints = "+self.getPoints.toString()+";self.replaceTokensForWidget = "+self.replaceTokensForWidget.toString()+";self.getNextDoseDateTime = "+self.getNextDoseDateTime.toString()+";self.getSortedDoses = "+self.getSortedDoses.toString()+";self.setWidgetToNeutralState = "+self.setWidgetToNeutralState.toString()+";";return c},getEMAPromptFns:function(){var d="getTriggerFns";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var c="self.genEMAPromptTriggerId = "+self.genEMAPromptTriggerId.toString()+";self.replaceTokensForEMA = "+self.replaceTokensForEMA.toString()+";";return c},getWidgetFns:function(){var d="getWidgetFns";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var c="self.replaceTokensForWidget = "+self.replaceTokensForWidget.toString()+";self.fetchWidget = "+self.fetchWidget.toString()+";self.updateWidget = "+self.updateWidget.toString()+";self.genDateFromTime = "+self.genDateFromTime.toString()+";self.getPoints = "+self.getPoints.toString()+";self.getNextDoseDateTime = "+self.getNextDoseDateTime.toString()+";self.getNextDose = "+self.getNextDose.toString()+";self.getMostRecentDose = "+self.getMostRecentDose.toString()+";self.getSortedDoses = "+self.getSortedDoses.toString()+";self.setWidgetToNeutralState = "+self.setWidgetToNeutralState.toString()+";self.replaceTokensForMedPrompt = "+self.replaceTokensForMedPrompt.toString()+";self.genMedPromptTriggerId = "+self.genMedPromptTriggerId.toString()+";self.getMedPromptTriggerIdDelayed = "+self.getMedPromptTriggerIdDelayed.toString()+";self.deleteTrigger = "+self.deleteTrigger.toString()+";self.appConfigUpsert = "+self.appConfigUpsert.toString()+";";return c},getAppCfgFns:function(){var e="getAppCfgFns";var c;if(!this.CURRENTLY_IN_TRIGGER){c=b.prototype}var d="self.appConfigUpsert = "+c.appConfigUpsert.toString()+";self.appConfigSampleTrigger = "+c.appConfigSampleTrigger.toString()+";self.appConfigCompletionStates = "+c.appConfigCompletionStates.toString()+";self.appCfgGetTriggerState = "+c.appCfgGetTriggerState.toString()+";";return d}},convertFnToString:function(d,c,h){var e="convertFnToString";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}var g=h?'"':"\\'";var f=self.isNullOrUndefined(c)?"":self.getQuotedAndDelimitedStr(c,",",g);return(h?"("+(d.toString().replace(/'/g,"\\'")).replace(/(\r\n|\n|\r)/gm,"")+")("+(f).replace(/(\r\n|\n|\r)/gm,"")+");":"("+(d.toString().replace(/'/g,"\\'")).replace(/(\r\n|\n|\r)/gm,"")+")("+f.replace(/(\r\n|\n|\r)/gm,"")+");")},getEMATypesForSchedulingFrequencyAsICal:function(c){var d="getEMATypeByPeriodicity";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.debug("entered; schedulingFrequencyAsICal = "+c,d);self.getAppCfg();return _.filter(_.keys(self.appCfg.staticOrDefault.showNativeDialog.assessment.frequencyAsICal),function(e){return self.appCfg.staticOrDefault.showNativeDialog.assessment.frequencyAsICal[e]==c})},isWeeklyTrigger:function(e){var c="isWeeklyTrigger";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.debug("entered; triggerId = "+e,c);self.getAppCfg();var d=self.getEMATypesForSchedulingFrequencyAsICal("WEEKLY");return _.any(d,function(f){return e.indexOf(f)!=-1})},clearAllNonPRNMTriggers:function(){var e="clearAllNonPRNMTriggers";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.debug("entered",e);var c=self.fetchTriggerIds();self.debug("allTriggerIds = "+_.map(c,function(f){return""+f}),e);var d=_.filter(c,function(j){var g=j==self.triggerIdPrefixes.self;var f=self.isWeeklyTrigger(j);var h=self.isDayToRunWeeklyScheduling();var i=((!g&&!f)||(!g&&f&&h));self.debug("deleteTrigger ("+j+") = "+i+" given: "+[g,f,h],e);return i});self.debug("triggersToDelete = "+_.map(d,function(f){return""+f}),e);self.warn("Deleting all triggers except: "+self.triggerIdPrefixes.self+". triggersToDelete = "+self.getQuotedAndDelimitedStr(d,",",'"'),e);_.each(d,function(f){self.debug("Deleting trigger: "+f,e);self.deleteTrigger(f)});self.debug("exiting",e)},getAllMedPromptDateTimes:function(d){var f="getAllMedPromptDateTimes";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.debug("createdMedPromptTriggerIds = "+d,f);var c=_.map(d,function(g){self.debug("triggerId = "+g,f);return self.fetchTrigger(g)});self.debug("medPromptTriggers = "+JSON.stringify(c),f);var e=_.map(c,function(g){return self.iCalToDate(g.datetime_start)});self.debug("medPromptTriggerDateTimes = "+e,f);return e},main:function(d){var e="main";if(!this.CURRENTLY_IN_TRIGGER){self=b.prototype}self.log("entered: args: "+d,e);self.log("execution context: "+self.execCtx,e);self.log("Creating the appCfg...",e);self.appConfigCreate(self.envConsts.appCfg.namespace,self.envConsts.appCfg.key);self.log("Updating Purple Robot configuration...",e);self.debug("self.appCfg = "+self.appCfg,e);self.debug("JSON.stringify(self.appCfg) = "+JSON.stringify(self.appCfg),e);self.debug("self.appCfg.staticOrDefault.PurpleRobotConfigurationUpdateConfig = "+self.appCfg.staticOrDefault.PurpleRobotConfigurationUpdateConfig,e);self.updatePurpleRobotConfiguration(self.appCfg.staticOrDefault.PurpleRobotConfigurationUpdateConfig);self.log("Clearing all non-PRNM triggers...",e);self.clearAllNonPRNMTriggers();self.log("Setting all MedPrompts...",e);var c=self.setAllMedPrompts();self.log("Setting all EMA prompts...",e);self.setAllEMAPrompts(c);self.log("Setting the widget...",e);self.setWidget(self.envConsts.appCfg.namespace,c);self.displayToast("Purple Robot Notification Manager completed successfully at "+(new Date()),true);self.log("exiting...",e)},test:function(){return"hello world from PurpleRobotNotificationManager.test"}};a.ctor=b;return a});var passedToPRNM=typeof exports==="undefined"?this["PurpleRobotNotificationManager"]={}:exports;var PurpleRobotNotificationManager=new PRNM(passedToPRNM);exports=PurpleRobotNotificationManager;exports.ctor.prototype.execCtx=currentExecutionContext;if(currentExecutionContext==0){PurpleRobot.log("exports.ctor.prototype.execCtx = "+exports.ctor.prototype.execCtx)}else{console.log("exports.ctor.prototype.execCtx = "+exports.ctor.prototype.execCtx)};